def print_grid(grid):
    for row in grid:
        print(" ".join(str(num) if num != 0 else '.' for num in row))

def is_valid(grid, row, col, num):
    # Check row
    if num in grid[row]:
        return False
    # Check column
    for r in range(9):
        if grid[r][col] == num:
            return False
    # Check 3x3 box
    start_row = (row // 3) * 3
    start_col = (col // 3) * 3
    for r in range(start_row, start_row + 3):
        for c in range(start_col, start_col + 3):
            if grid[r][c] == num:
                return False
    return True

def solve_sudoku(grid):
    for row in range(9):
        for col in range(9):
            if grid[row][col] == 0:
                for num in range(1, 10):
                    if is_valid(grid, row, col, num):
                        grid[row][col] = num
                        if solve_sudoku(grid):
                            return True
                        grid[row][col] = 0  # Backtrack
                return False
    return True

def main():
    print("Enter the Sudoku puzzle row by row (use 0 for empty cells):")
    grid = []
    for i in range(9):
        row = input(f"Row {i+1}: ")
        row_numbers = list(map(int, row.strip().split()))
        if len(row_numbers) != 9:
            print("Each row must have 9 numbers.")
            return
        grid.append(row_numbers)

    print("\nOriginal Sudoku Puzzle:")
    print_grid(grid)

    if solve_sudoku(grid):
        print("\nSolved Sudoku Puzzle:")
        print_grid(grid)
    else:
        print("\nNo solution exists for the given puzzle.")

if __name__ == "__main__":
    main()
